name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Set up pre-commit cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Install pre-commit
      run: |
        pip install pre-commit
        pre-commit install

    - name: Run pre-commit hooks
      run: |
        pre-commit run --all-files
      env:
        SKIP: pytest,pytest-cov  # Skip test hooks in CI (covered by separate test job)

    - name: Run bandit security scan
      run: |
        pip install bandit[toml]
        bandit -r . -c .bandit.yaml --exclude tests/,venv/,.venv/,env/,.env/,build/,dist/,htmlcov/ --format json --output bandit-results.json
        echo "Bandit security scan completed. Results saved to bandit-results.json"
        if [ -s bandit-results.json ]; then
          echo "Security issues found. See bandit-results.json for details."
          cat bandit-results.json | python -m json.tool
          # Don't fail the build for security issues, just report them
          echo "::warning::Security issues detected by bandit. Review bandit-results.json"
        else
          echo "No security issues found."
        fi

    - name: Run flake8 linting (using .flake8 config)
      run: |
        pip install flake8 flake8-docstrings flake8-bugbear flake8-comprehensions flake8-simplify
        # Use the .flake8 configuration file for consistency with local development
        flake8 . --count --show-source --statistics

    - name: Check import sorting with isort
      run: |
        pip install isort
        isort --check-only --diff --profile black --line-length 120 .

    - name: Check code formatting with black
      run: |
        pip install black
        black --check --diff --line-length 120 .

    - name: Upload bandit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-security-report
        path: bandit-results.json
        retention-days: 30
